app TLDR {
  wasp: {
    version: "^0.11.1"
  },
  title: "TLDR",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id            Int       @id @default(autoincrement())
    username      String    @unique
    password      String
    savedArticles Article[]
psl=}

entity Article {=psl
    id          Int    @id @default(autoincrement())
    title       String
    content     String
    author      String
    publishedAt String
    user        User   @relation(fields: [userId], references: [id])
    userId      Int
psl=}

action saveArticle {
  fn: import { saveArticle } from "@server/actions.js",
  entities: [User, Article]
}

action unloadArticle {
  fn: import { unloadArticle } from "@server/actions.js",
  entities: [User, Article]
}

query getArticles {
  fn: import { getArticles } from "@server/queries.js",
  entities: [Article]
}

query getSavedArticles {
  fn: import { getSavedArticles } from "@server/queries.js",
  entities: [User, Article]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import { Home } from "@client/pages/Home.jsx",
  authRequired: false
}

route SavedArticlesRoute { path: "/savedArticles", to: SavedArticlesPage }
page SavedArticlesPage {
  component: import { SavedArticles } from "@client/pages/SavedArticles.jsx",
  authRequired: true
}

route ArticleRoute { path: "/article/:articleId", to: ArticlePage }
page ArticlePage {
  component: import { ArticlePage } from "@client/pages/Article.jsx",
  authRequired: false
}